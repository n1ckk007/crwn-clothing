{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport userReducer from \"./user/userReducer\";\nimport cartReducer from \"./cart/cartReducer\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport directoryReducer from \"./directory/directoryReducer\";\nconst persistConfig = {\n  //at what point inside of our reducer obj do we want to start storing everything which is the root\n  key: \"root\",\n  // what storage we're using\n  storage,\n  // array containing string names of any reducer that we want to store/ 'persist'\n  whitelist: [\"cart\"]\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/redux/root-reducer.js"],"names":["combineReducers","userReducer","cartReducer","persistReducer","storage","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,GAAG,EAAE,MAFe;AAGpB;AACAH,EAAAA,OAJoB;AAKpB;AACAI,EAAAA,SAAS,EAAE,CAAC,MAAD;AANS,CAAtB;AASA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAET,WAD4B;AAElCU,EAAAA,IAAI,EAAET,WAF4B;AAGlCU,EAAAA,SAAS,EAAEP;AAHuB,CAAD,CAAnC;AAMA,eAAeF,cAAc,CAACG,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport userReducer from \"./user/userReducer\";\r\nimport cartReducer from \"./cart/cartReducer\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport directoryReducer from \"./directory/directoryReducer\";\r\n\r\nconst persistConfig = {\r\n  //at what point inside of our reducer obj do we want to start storing everything which is the root\r\n  key: \"root\",\r\n  // what storage we're using\r\n  storage,\r\n  // array containing string names of any reducer that we want to store/ 'persist'\r\n  whitelist: [\"cart\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  cart: cartReducer,\r\n  directory: directoryReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n"]},"metadata":{},"sourceType":"module"}