{"ast":null,"code":"import { CartActionTypes } from \"./cartTypes\";\nimport { addItomToCart } from \"./cartUtils\";\nimport CartItem from \"../../components/cart-item/CartItem\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        // whatever the boolean value is, convert it to the opposite of it\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        //spreading in all of our array values then any additional values we add at the end will apear at the end of the array\n        cartItems: addItomToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        // update cartItems so will return new array without any instance of the item that we're trying to clear away\n        cartItems: state.cartItems.filter( // filter returns back anything that yields true\n        // if cartItem id doesn't match action payload (the item we're trying to remove) id then keep it, if matches then filter it out\n        cartItem => cartItem.id != action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/redux/cart/cartReducer.js"],"names":["CartActionTypes","addItomToCart","CartItem","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,aAAhC;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAEL;AACAH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAHV,OAAP;;AAKF,SAAKJ,eAAe,CAACW,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAEL;AACAF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAHnB,OAAP;;AAKF,SAAKZ,eAAe,CAACa,oBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAEL;AACAF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,EACT;AACA;AACCC,QAAAA,QAAD,IAAcA,QAAQ,CAACC,EAAT,IAAeR,MAAM,CAACI,OAAP,CAAeI,EAHnC;AAHN,OAAP;;AASF;AACE,aAAOT,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from \"./cartTypes\";\r\nimport { addItomToCart } from \"./cartUtils\";\r\nimport CartItem from \"../../components/cart-item/CartItem\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        // whatever the boolean value is, convert it to the opposite of it\r\n        hidden: !state.hidden,\r\n      };\r\n    case CartActionTypes.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        //spreading in all of our array values then any additional values we add at the end will apear at the end of the array\r\n        cartItems: addItomToCart(state.cartItems, action.payload),\r\n      };\r\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        // update cartItems so will return new array without any instance of the item that we're trying to clear away\r\n        cartItems: state.cartItems.filter(\r\n          // filter returns back anything that yields true\r\n          // if cartItem id doesn't match action payload (the item we're trying to remove) id then keep it, if matches then filter it out\r\n          (cartItem) => cartItem.id != action.payload.id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}