{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\error-boundary\\\\error-boundary.js\";\nimport React from \"react\";\nimport { ErrorImageContainer, ErrorImageOverlay, ErrorImageText } from \"./error-boundary.styles\";\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  } // in order for react to know this is an error boundary comp, we need to use either of these methods that are unique to error boundaries\n\n\n  static getDerivedStateFromError(error) {\n    // catches any error that gets thrown in any of the children of this error boundary component\n    // proccess the error\n    // return from this method some obj that will set the state inside of this class\n    return {\n      hasErrored: true\n    };\n  } //   gives us access to error and info related to the error and how it got thrown\n\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render() {\n    //   if an error has happened return error msg\n    if (this.state.hasErrored) {\n      return /*#__PURE__*/React.createElement(ErrorImageOverlay, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ErrorImageContainer, {\n        imageUrl: \"https://i.imgur.com/QIxIKBH.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ErrorImageText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Hello. You have reached the error ghost. OoOoOoooOooO\"));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/client/src/components/error-boundary/error-boundary.js"],"names":["React","ErrorImageContainer","ErrorImageOverlay","ErrorImageText","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,yBAJP;;AAMA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD,GAPyC,CAS1C;;;AACA,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC;AACA;AACA;AACA,WAAO;AAAEF,MAAAA,UAAU,EAAE;AAAd,KAAP;AACD,GAfyC,CAiB1C;;;AACAG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,KAAKR,KAAL,CAAWC,UAAf,EAA2B;AACzB,0BACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAC,iCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF,CADF;AAQD;;AACD,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;AAnCyC;;AAsC5C,eAAeb,aAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ErrorImageContainer,\r\n  ErrorImageOverlay,\r\n  ErrorImageText,\r\n} from \"./error-boundary.styles\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      hasErrored: false,\r\n    };\r\n  }\r\n\r\n  // in order for react to know this is an error boundary comp, we need to use either of these methods that are unique to error boundaries\r\n  static getDerivedStateFromError(error) {\r\n    // catches any error that gets thrown in any of the children of this error boundary component\r\n    // proccess the error\r\n    // return from this method some obj that will set the state inside of this class\r\n    return { hasErrored: true };\r\n  }\r\n\r\n  //   gives us access to error and info related to the error and how it got thrown\r\n  componentDidCatch(error, info) {\r\n    console.log(error);\r\n  }\r\n\r\n  render() {\r\n    //   if an error has happened return error msg\r\n    if (this.state.hasErrored) {\r\n      return (\r\n        <ErrorImageOverlay>\r\n          <ErrorImageContainer imageUrl=\"https://i.imgur.com/QIxIKBH.png\" />\r\n          <ErrorImageText>\r\n            Hello. You have reached the error ghost. OoOoOoooOooO\r\n          </ErrorImageText>\r\n        </ErrorImageOverlay>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"]},"metadata":{},"sourceType":"module"}