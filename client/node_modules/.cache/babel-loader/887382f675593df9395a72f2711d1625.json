{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\client\\\\src\\\\App.js\";\nimport React, { lazy, Suspense, useEffect } from \"react\";\nimport { GlobalStyle } from \"./globalStyles\"; // import HomePage from \"./pages/homepage/homepage\";\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Header from \"./components/header/Header\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"./redux/user/userSelector\";\nimport { checkUserSession } from \"./redux/user/userActions\";\nimport Spinner from \"./components/spinner/Spinner\"; // declare the const that we want to dynamically import and wrap it in lazy\n// component = lazy which is a func that gets passed a func that gets called import and then a string to the path that we want\n\nconst HomePage = lazy(() => import(\"./pages/homepage/homepage\"));\nconst ShopPage = lazy(() => import(\"./pages/shop/ShopPage\"));\nconst SignInAndSignUpPage = lazy(() => import(\"./pages/sign-in-and-sign-up/sign-in-and-sign-up\"));\nconst CheckoutPage = lazy(() => import(\"./pages/checkout/Checkout\"));\nconst ContactPage = lazy(() => import(\"./pages/contact/ContactPage\"));\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  //close subscription when it unmounts\n  // unsubscribeFromAuth = null;\n  useEffect(() => {\n    // we need to call checkusersession but we only want it the first time when we actually pass it in like CDM\n    checkUserSession();\n  }, [checkUserSession]); // use useEffect instead now\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  // }\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\" // if theres a current user signed in it redirects to home page\n    ,\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/contact\",\n    component: ContactPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/client/src/App.js"],"names":["React","lazy","Suspense","useEffect","GlobalStyle","Switch","Route","Redirect","connect","Header","createStructuredSelector","selectCurrentUser","checkUserSession","Spinner","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","ContactPage","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense, useEffect } from \"react\";\nimport { GlobalStyle } from \"./globalStyles\";\n// import HomePage from \"./pages/homepage/homepage\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./components/header/Header\";\n\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"./redux/user/userSelector\";\nimport { checkUserSession } from \"./redux/user/userActions\";\nimport Spinner from \"./components/spinner/Spinner\";\n\n// declare the const that we want to dynamically import and wrap it in lazy\n// component = lazy which is a func that gets passed a func that gets called import and then a string to the path that we want\nconst HomePage = lazy(() => import(\"./pages/homepage/homepage\"));\nconst ShopPage = lazy(() => import(\"./pages/shop/ShopPage\"));\nconst SignInAndSignUpPage = lazy(() =>\n  import(\"./pages/sign-in-and-sign-up/sign-in-and-sign-up\")\n);\nconst CheckoutPage = lazy(() => import(\"./pages/checkout/Checkout\"));\nconst ContactPage = lazy(() => import(\"./pages/contact/ContactPage\"));\n\nconst App = ({ checkUserSession, currentUser }) => {\n  //close subscription when it unmounts\n  // unsubscribeFromAuth = null;\n  useEffect(() => {\n    // we need to call checkusersession but we only want it the first time when we actually pass it in like CDM\n    checkUserSession();\n  }, [checkUserSession]);\n\n  // use useEffect instead now\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  // }\n\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // }\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Suspense fallback={<Spinner />}>\n          <Route exact path=\"/\" component={HomePage} />\n\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route\n            exact\n            path=\"/signin\"\n            // if theres a current user signed in it redirects to home page\n            render={() =>\n              currentUser ? <Redirect to=\"/\" /> : <SignInAndSignUpPage />\n            }\n          />\n          <Route exact path=\"/contact\" component={ContactPage} />\n        </Suspense>\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}