{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ShopPage from \"./pages/shop/ShopPage\";\nimport Header from \"./components/header/Header\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  } //close subscription when it unmounts\n\n\n  componentDidMount() {\n    // method on the auth library from firebase. takes a function where the param is what the user state is of the auth\n    this.unsubscribeFromAuth = //this is an open subscription as long as component is mounted on our DOM, whenever any changes occur on firebase eg sign in/out,\n    // firebase sends msg saying auth state has changed\n    auth.onAuthStateChanged(async userAuth => {\n      // this.setState({ currentUser: user });\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              // creating new obj that has both all properties of snapshot that we want as well as the id\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          console.log(this.state);\n        });\n      } else {\n        //equivalent to saying current user is to null\n        this.setState({\n          currentUser: userAuth\n        });\n      } // console.log(user);\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/App.js"],"names":["React","Component","HomePage","Switch","Route","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","App","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,GAAG;AACZ;AADY,SASdC,mBATc,GASQ,IATR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD,GAPyB,CAS1B;;;AAGAC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKH,mBAAL,GAA2B;AACzB;AACAJ,IAAAA,IAAI,CAACQ,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AAC1C;AACA,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMT,yBAAyB,CAACQ,QAAD,CAA/C;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAC/B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW,EAAE;AACX;AACAQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EAFF;AAGX,iBAAGF,QAAQ,CAACG,IAAT;AAHQ;AADD,WAAd;AAOAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACD,SATD;AAUD,OAZD,MAYO;AACL;AACA,aAAKQ,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEG;AAAf,SAAd;AACD,OAjByC,CAkB1C;;AACD,KAnBD,CAFF;AAsBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AArDyB;;AAwD5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ShopPage from \"./pages/shop/ShopPage\";\nimport Header from \"./components/header/Header\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  //close subscription when it unmounts\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    // method on the auth library from firebase. takes a function where the param is what the user state is of the auth\n    this.unsubscribeFromAuth = //this is an open subscription as long as component is mounted on our DOM, whenever any changes occur on firebase eg sign in/out,\n      // firebase sends msg saying auth state has changed\n      auth.onAuthStateChanged(async (userAuth) => {\n        // this.setState({ currentUser: user });\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot((snapShot) => {\n            this.setState({\n              currentUser: {\n                // creating new obj that has both all properties of snapshot that we want as well as the id\n                id: snapShot.id,\n                ...snapShot.data(),\n              },\n            });\n            console.log(this.state);\n          });\n        } else {\n          //equivalent to saying current user is to null\n          this.setState({ currentUser: userAuth });\n        }\n        // console.log(user);\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/signin\" component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}