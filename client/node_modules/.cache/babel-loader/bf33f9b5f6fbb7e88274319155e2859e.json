{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\src\\\\components\\\\cart-dropdown\\\\CartDropdown.js\";\nimport React from \"react\";\nimport \"./CartDropdown.scss\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport CartItem from \"../cart-item/CartItem\";\nimport { connect } from \"react-redux\";\nimport { selectCartItems } from \"../../redux/cart/cartSelectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CartDropdown = ({\n  cartItems,\n  history\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, //if theres a value greater than 0 then render cart items\ncartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n})) :\n/*#__PURE__*/\n// if no items render msg\nReact.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 11\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => history.push(\"/checkout\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/components/cart-dropdown/CartDropdown.js"],"names":["React","CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","withRouter","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AACAD,SAAS,CAACE,MAAV,GACEF,SAAS,CAACG,GAAV,CAAeC,QAAD,iBACZ,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;AAAA;AAKE;AACA;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATN,CADF,eAcE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAMH,OAAO,CAACK,IAAR,CAAa,WAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,CADF;;AAqBA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAC/CG,EAAAA,SAAS,EAAEJ;AADoC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACY,eAAD,CAAP,CAAyBR,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport \"./CartDropdown.scss\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport CartItem from \"../cart-item/CartItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCartItems } from \"../../redux/cart/cartSelectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CartDropdown = ({ cartItems, history }) => (\r\n  <div className=\"cart-dropdown\">\r\n    <div className=\"cart-items\">\r\n      {\r\n        //if theres a value greater than 0 then render cart items\r\n        cartItems.length ? (\r\n          cartItems.map((cartItem) => (\r\n            <CartItem key={cartItem.id} item={cartItem} />\r\n          ))\r\n        ) : (\r\n          // if no items render msg\r\n          <span className=\"empty-message\">Your cart is empty</span>\r\n        )\r\n      }\r\n    </div>\r\n    <CustomButton onClick={() => history.push(\"/checkout\")}>\r\n      GO TO CHECKOUT\r\n    </CustomButton>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}