{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\SignUp.js\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport \"./SignUp.scss\";\nimport { signUpStart } from \"../../redux/user/userActions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // destructure off our props from dispatch\n    // const { signUpStart } = this.props;\n    // const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    } // fire signupstart with obj that has dp email and pw\n\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    }); // try { ***moved to userSagas***\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n    //   // in order for us to create it in our backend we need to run createUserprofDoc using our new auth obj that we get back aswell as display name\n    //   await createUserProfileDocument(user, { displayName });\n    // this.setState({ ***dont need the setstate anymore cos it signs the user in after we sign them up***\n    //   //   this will clear the form after user is created\n    //   displayName: \"\",\n    //   email: \"\",\n    //   password: \"\",\n    //   confirmPassword: \"\",\n    // });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  }; // const { displayName, email, password, confirmPassword } = this.state;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  // pass in email, pw and credentials so just pass in as obj called userCredentials\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/client/src/components/sign-up/SignUp.js"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FormInput from \"../form-input/FormInput\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport \"./SignUp.scss\";\r\nimport { signUpStart } from \"../../redux/user/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // destructure off our props from dispatch\r\n    // const { signUpStart } = this.props;\r\n    // const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Password don't match\");\r\n      return;\r\n    }\r\n    // fire signupstart with obj that has dp email and pw\r\n    signUpStart({ displayName, email, password });\r\n    // try { ***moved to userSagas***\r\n    //   const { user } = await auth.createUserWithEmailAndPassword(\r\n    //     email,\r\n    //     password\r\n    //   );\r\n    //   // in order for us to create it in our backend we need to run createUserprofDoc using our new auth obj that we get back aswell as display name\r\n    //   await createUserProfileDocument(user, { displayName });\r\n\r\n    // this.setState({ ***dont need the setstate anymore cos it signs the user in after we sign them up***\r\n    //   //   this will clear the form after user is created\r\n    //   displayName: \"\",\r\n    //   email: \"\",\r\n    //   password: \"\",\r\n    //   confirmPassword: \"\",\r\n    // });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  // const { displayName, email, password, confirmPassword } = this.state;\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h2 className=\"title\">I do not have an account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label=\"Display Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // pass in email, pw and credentials so just pass in as obj called userCredentials\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}