{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\ShopPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/CollectionPage\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\"; // we get match, location and history as props from Route\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\"); // whenever collectionRef updates or gets run for the first time this collectionRef\n    // will send us the snapshot representing the code of our collections obj array\n\n    collectionRef.onSnapshot(async snapshot => {\n      console.log(snapshot);\n      convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect()(ShopPage);","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/pages/shop/ShopPage.js"],"names":["React","Component","connect","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","console","log","render","match","props","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP,C,CAKA;;AACA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BQ,uBAD+B,GACL,IADK;AAAA;;AAG/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB,CADkB,CAElB;AACA;;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,MAAAA,+BAA+B,CAACO,QAAD,CAA/B;AACD,KAHD;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEf,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAUD;;AAzB8B;;AA4BjC,eAAeH,OAAO,GAAGM,QAAH,CAAtB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"../collection/CollectionPage\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\n// we get match, location and history as props from Route\r\nclass ShopPage extends Component {\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    // whenever collectionRef updates or gets run for the first time this collectionRef\r\n    // will send us the snapshot representing the code of our collections obj array\r\n    collectionRef.onSnapshot(async (snapshot) => {\r\n      console.log(snapshot);\r\n      convertCollectionsSnapshotToMap(snapshot);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n        {/* collection to dynamically pluck off right category from our reducer to know which one to display */}\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}