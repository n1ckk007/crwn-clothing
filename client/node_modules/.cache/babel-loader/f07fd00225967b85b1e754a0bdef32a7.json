{"ast":null,"code":"export const addItomToCart = (cartItems, cartItemToAdd) => {\n  // look into existing cart items to see if the new item already exists\n  // find will return the first item found in our array based off condition thats passed in\n  // get each cart item, check id, if it matches the carts item that we're trying to add id\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // if it matches it will set that cart item where condition is true to our constant, if not will be undefined\n  // if existingCartItem exists then return new array and pass cartitem\n\n  if (existingCartItem) {\n    // if cartitems id matches new cart items id just increase the quantity\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : // if id doesn't match just return the og cart item\n    cartItem);\n  } // if cart item is not found in our array, return new array with all our existing cart items but also add object with base quantity of 1\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find( // check if the cartitemid = toremove id, if we have existing cart item then check if quantity = 1 then we want to filter it out\n  cartItem => cartItem.id === cartItemToRemove.id); // if existing items quantity is at 1 then remove it\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // otherwise decrese the quantity and keep everyother cart item the same\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/redux/cart/cartUtils.js"],"names":["addItomToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AACA;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB,CAJyD,CAOzD;AACA;;AACA,MAAIH,gBAAJ,EAAsB;AACpB;AACA,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEI;AACAH,IAAAA,QAJC,CAAP;AAMD,GAjBwD,CAmBzD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CArBM;AAuBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AACjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,EACvB;AACCC,EAAAA,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAFxB,CAAzB,CADiE,CAKjE;;AACA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOP,SAAS,CAACU,MAAV,CAAkBN,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAhE,CAAP;AACD,GARgE,CASjE;;;AACA,SAAOL,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACI,EAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADJ,GAEIH,QAHC,CAAP;AAKD,CAfM","sourcesContent":["export const addItomToCart = (cartItems, cartItemToAdd) => {\r\n  // look into existing cart items to see if the new item already exists\r\n  // find will return the first item found in our array based off condition thats passed in\r\n  // get each cart item, check id, if it matches the carts item that we're trying to add id\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToAdd.id\r\n  );\r\n  // if it matches it will set that cart item where condition is true to our constant, if not will be undefined\r\n  // if existingCartItem exists then return new array and pass cartitem\r\n  if (existingCartItem) {\r\n    // if cartitems id matches new cart items id just increase the quantity\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : // if id doesn't match just return the og cart item\r\n          cartItem\r\n    );\r\n  }\r\n\r\n  // if cart item is not found in our array, return new array with all our existing cart items but also add object with base quantity of 1\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n  const existingCartItem = cartItems.find(\r\n    // check if the cartitemid = toremove id, if we have existing cart item then check if quantity = 1 then we want to filter it out\r\n    (cartItem) => cartItem.id === cartItemToRemove.id\r\n  );\r\n  // if existing items quantity is at 1 then remove it\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\r\n  }\r\n  // otherwise decrese the quantity and keep everyother cart item the same\r\n  return cartItems.map((cartItem) =>\r\n    cartItem.id === cartItemToRemove.id\r\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n      : cartItem\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}