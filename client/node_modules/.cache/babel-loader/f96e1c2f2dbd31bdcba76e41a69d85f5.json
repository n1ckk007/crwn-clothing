{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\ReactCourse2\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ShopPage from \"./pages/shop/ShopPage\";\nimport Header from \"./components/header/Header\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/userActions\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props; // method on the auth library from firebase. takes a function where the param is what the user state is of the auth\n\n    this.unsubscribeFromAuth = //this is an open subscription as long as component is mounted on our DOM, whenever any changes occur on firebase eg sign in/out,\n    // firebase sends msg saying auth state has changed\n    auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              // creating new obj that has both all properties of snapshot that we want as well as the id\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      } else {\n        //equivalent to saying current user is to null\n        setCurrentUser(userAuth);\n      } // console.log(user);\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/anton/ReactCourse2/crwn-clothing/src/App.js"],"names":["React","Component","HomePage","Switch","Route","Redirect","connect","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","setCurrentUser","App","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","currentUser","id","data","componentWillUnmount","render","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ShopPage from \"./pages/shop/ShopPage\";\nimport Header from \"./components/header/Header\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/userActions\";\n\nclass App extends Component {\n  //close subscription when it unmounts\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    // method on the auth library from firebase. takes a function where the param is what the user state is of the auth\n    this.unsubscribeFromAuth = //this is an open subscription as long as component is mounted on our DOM, whenever any changes occur on firebase eg sign in/out,\n      // firebase sends msg saying auth state has changed\n      auth.onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot((snapShot) => {\n            setCurrentUser({\n              currentUser: {\n                // creating new obj that has both all properties of snapshot that we want as well as the id\n                id: snapShot.id,\n                ...snapShot.data(),\n              },\n            });\n          });\n        } else {\n          //equivalent to saying current user is to null\n          setCurrentUser(userAuth);\n        }\n        // console.log(user);\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}